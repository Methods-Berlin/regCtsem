% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GIST.R
\name{exact_GIST}
\alias{exact_GIST}
\title{exact_GIST}
\usage{
exact_GIST(
  ctsemObject,
  mxObject,
  dataset,
  objective,
  regOn = "DRIFT",
  regIndicators,
  regValues,
  adaptiveLassoWeights,
  sparseParameters = NULL,
  tryCpptsem,
  forceCpptsem = FALSE,
  eta = 1.5,
  sig = 0.2,
  initialStepsize = 1,
  stepsizeMin = 0,
  stepsizeMax = 999999999,
  GISTLinesearchCriterion = "monotone",
  GISTNonMonotoneNBack = 5,
  maxIter_out = 100,
  maxIter_in = 100,
  break_outer = 1e-08,
  scaleLambdaWithN = TRUE,
  sampleSize,
  exactApproximateFirst = 0,
  exactApproximateFirst3NumStartingValues = 10,
  exactApproximateFirst3Optimize = T,
  exactApproximateFirstMaxIter_out = 5,
  extraTries = 3,
  differenceApprox = "central",
  verbose = 0,
  progressBar = TRUE,
  parallelProgressBar = NULL
)
}
\arguments{
\item{ctsemObject}{if objective = "ML": Fitted object of class ctsem. If you want to use objective = "Kalman", pass an object of type ctsemInit from ctModel}

\item{mxObject}{Object of type MxModel}

\item{dataset}{only required if objective = "Kalman" and ctsemObject ist of type ctsemInit. Please provide a data set in wide format compatible to ctsemOMX}

\item{objective}{which objective should be used? Possible are "ML" (Maximum Likelihood) or "Kalman" (Kalman Filter)}

\item{regOn}{string specifying which matrix should be regularized. Currently only supports DRIFT}

\item{regIndicators}{Vector with names of regularized parameters}

\item{regValues}{Vector with lambda values that should be tried}

\item{adaptiveLassoWeights}{weights for the adaptive lasso.}

\item{tryCpptsem}{should regCtsem try to translate the model to cpptsem? This can speed up the computation considerably but might fail for some models}

\item{forceCpptsem}{should cpptsem be enforced even if results differ from ctsem? Sometimes differences between cpptsem and ctsem can result from problems with numerical precision which will lead to the m,atrix exponential of RcppArmadillo differing from the OpenMx matrix exponential. If you want to ensure the faster optimization, set to TRUE. See vignette("MatrixExponential", package = "cpptsem") for more details}

\item{eta}{if the current step size fails, eta will decrease the step size. Must be > 1}

\item{sig}{GIST: sigma value in Gong et al. (2013). Sigma controls the inner stopping criterion and must be in (0,1). Generally, a larger sigma enforce a steeper decrease in the regularized likelihood while a smaller sigma will result in faster acceptance of the inner iteration.}

\item{stepsizeMin}{the initial step size is an integer randomly selected between stepsizeMin and stepsizeMax. All subsequent step sizes will be computed as described by Gong et al. (2013)}

\item{stepsizeMax}{the initial step size is an integer randomly selected between stepsizeMin and stepsizeMax. All subsequent step sizes will be computed as described by Gong et al. (2013)}

\item{GISTLinesearchCriterion}{criterion for accepting a step. Possible are 'monotone' which enforces a monotone decrease in the objective function or 'non-monotone' which also accepts some increase.}

\item{GISTNonMonotoneNBack}{in case of non-monotone line search: Number of preceding regM2LL values to consider}

\item{maxIter_out}{maximal number of outer iterations}

\item{maxIter_in}{maximal number of inner iterations}

\item{break_outer}{stopping criterion for the outer iteration.}

\item{scaleLambdaWithN}{Boolean: Should the penalty value be scaled with the sample size? True is recommended, as the likelihood is also sample size dependent}

\item{sampleSize}{sample size for scaling lambda with N}

\item{exactApproximateFirst}{Should approximate optimization be used first to obtain start values for exact optimization? 1 = only for first regValue, 2 = for all regValues}

\item{exactApproximateFirst3NumStartingValues}{Used if exactApproximateFirst = 3. regCtsem will try exactApproximateFirst3NumStartingValues+2 starting values (+2 because it will always try the current best and the parameters provided in sparseParameters)}

\item{exactApproximateFirst3Optimize}{Used if exactApproximateFirst = 3. Should each of the generated starting values be optimized slightly? This can substantially improve the fit of the generated starting values. 1 = optimization with optim, 2 = optimization with Rsolnp}

\item{exactApproximateFirstMaxIter_out}{Used if exactApproximateFirst = 3 and exactApproximateFirst3Optimize > 1. How many outer iterations should be given to each starting values vector? More will improve the selected starting values but slow down the computation. If exactApproximateFirst =  4, or exactApproximateFirst = 5 this will control the number of outer iteration in optim or solnp .}

\item{extraTries}{number of extra tries in mxTryHard for warm start}

\item{verbose}{0 (default), 1 for convergence plot, 2 for parameter convergence plot and line search progress}

\item{stepSize}{Initial stepSize of the outer iteration (theta_{k+1} = theta_k + stepSize \* Stepdirection)}
}
\description{
General Iterative Shrinkage and Thresholding Algorithm based on Gong, P., Zhang, C., Lu, Z., Huang, J., & Ye, J. (2013). A General Iterative Shrinkage and Thresholding Algorithm for Non-convex Regularized Optimization Problems. In S. Dasgupta & D. McAllester (Eds.), Proceedings of Machine Learning Research (PMLR; Vol. 28, Issue 2, pp. 37--45). PMLR. http://proceedings.mlr.press
}
\details{
GIST minimizes a function of form f(theta) = l(theta) + g(theta), where l is the likelihood and g is a penalty function. Various penalties are supported, however currently only lasso and adaptive lasso are implemented.

NOTE: Function located in file GIST.R
}
