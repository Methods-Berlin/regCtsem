% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regCtsem.R
\name{approx_regCtsem}
\alias{approx_regCtsem}
\title{approx_regCtsem}
\usage{
approx_regCtsem(
  cpptsemObject = NULL,
  dataset = NULL,
  regIndicators,
  lambdas,
  lambdasAutoLength = 50,
  targetVector,
  penalty = "lasso",
  adaptiveLassoWeights = NULL,
  standardizeDrift = FALSE,
  returnFitIndices = TRUE,
  cvSampleCpptsemObject = NULL,
  optimizer = "BFGS",
  objective = "ML",
  epsilon = 0.001,
  zeroThresh = 0.001,
  maxIter = 200,
  scaleLambdaWithN = T,
  verbose = 0
)
}
\arguments{
\item{cpptsemObject}{Fitted object of class cpptsem}

\item{dataset}{only required if objective = "Kalman" and ctsemObject is of type ctsemInit. Please provide a data set in wide format compatible to ctsemOMX}

\item{regIndicators}{Labels for the regularized parameters (e.g. drift_eta1_eta2)}

\item{lambdas}{vector of penalty values (tuning parameter). E.g., seq(0,1,.01). Alternatively, lambdas can be set to "auto". regCtsem will then compute an upper limit for lambda and test lambdasAutoLength increasing lambda values}

\item{lambdasAutoLength}{if lambdas == "auto", lambdasAutoLength will determine the number of lambdas tested.}

\item{targetVector}{named vector with values towards which the parameters are regularized}

\item{penalty}{Currently supported are ridge, lasso, and adaptiveLasso}

\item{adaptiveLassoWeights}{weights for the adaptive lasso. If auto, defaults to the inverse of unregularized parameter estimates.}

\item{standardizeDrift}{Boolean: Should Drift parameters be standardized automatically using the T0VAR?}

\item{returnFitIndices}{Boolean: should fit indices be returned?}

\item{cvSampleCpptsemObject}{cppstem for cross-validation}

\item{objective}{which objective should be used? Possible are "ML" (Maximum Likelihood) or "Kalman" (Kalman Filter)}

\item{epsilon}{epsilon is used to transform the non-differentiable lasso penalty to a differentiable one if optimization = approx}

\item{zeroThresh}{threshold below which parameters will be evaluated as == 0 in lasso regularization if optimization = approx}

\item{scaleLambdaWithN}{Boolean: Should the penalty value be scaled with the sample size? True is recommended, as the likelihood is also sample size dependent}

\item{verbose}{0 (default), 1 for convergence plot, 2 for parameter convergence plot and line search progress}
}
\description{
creates a regCtsem object for approximate optimization
}
\details{
NOTE: Function located in file regCtsem.R
}
\author{
Jannik Orzek
}
